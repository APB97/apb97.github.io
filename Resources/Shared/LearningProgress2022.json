{"Strings":{"Example":"Example","Extended property pattern":"Extended property pattern","Extended property pattern code":"// based on example from https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/patterns#property-pattern\npublic record Point2D(int X, int Y);\npublic record Line2D(Point Start, Point End);\n\nstatic bool IsAnyEndOnAnyAxis(Line2D line) =\u003E\n    line is { Start.X: 0 } or { Start.Y: 0 } or { End.X: 0 } or { End.Y: 0 };\n    // older syntax: line is { Start { X : 0 } } or ...","Extended property pattern description":"Extended property pattern allows to reference properties or fields of a property pattern. Applies to C# 10 and above.","File-scoped namespace declaration":"File-scoped namespace declaration","File-scoped namespace declaration code":"namespace apb97.github.io.Shared;\n\npublic class MyClass\n{\n    // code omitted\n}","File-scoped namespace declaration description":"File-scoped namespace declaration allows to specify a namespace for a file in a way that saves horizontal space, as well as some vertical space. Applies to C# 10 and above.","Global using directive":"Global using directive","Global using directive code":"global using apb97.github.io.Shared;","Global using directive description":"Global using directive is a feature that allows developers to declare namespaces used in a project in a separate file, especially useful if you are dealing with some namespaces more often then with others. Applies to C# 10 and above.","Year2022-last-weeks":"Last weeks of 2022"}}