@implements IDisposable

@inject APB97StringLocalizer<Challenges> localization
@inject IJSRuntime JS

@if (ShouldRender())
{
    <AdjustedAnchorHeading Id="challenges" Heading="@localization.Localize("Challenges")">
        <div class="d-flex" style="font-size: larger">
            <ul style="list-style-type: none;">
                <li>
                    <a class="link-primary" href="/IntegerToRoman"><span>@localization.Localize("Integer to Roman")</span></a>
                </li>
                <li>
                    <a class="link-primary" href="/CountAndSay"><span>@localization.Localize("Count and say")</span></a>
                </li>
            </ul>
        </div>
    </AdjustedAnchorHeading>
}

@code {
    protected override bool ShouldRender()
    {
        return localization.IsReady;
    }

    protected override async Task OnInitializedAsync()
    {
        await localization.InitializeAsync(LanguageSelect.Culture);
    }

    protected override void OnInitialized()
    {
        MainLayout.OnStateChanging += GetResources;
    }

    void IDisposable.Dispose()
    {
        MainLayout.OnStateChanging -= GetResources;
    }

    private async Task GetResources()
    {
        await localization.InitializeAsync(LanguageSelect.Culture);
        StateHasChanged();
    }
}
