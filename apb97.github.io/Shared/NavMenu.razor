@using apb97.github.io.Services.Dimensions
@implements IDisposable
@inject StringLocalizer<NavMenu> Loc
@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a style="color: white; text-decoration: none !important;" Href="/">APB97</a>
        <button style="border: none; background-color: transparent; padding: 0;" @onclick="() => Layout.ToggleLayoutMode()">
            @if (Layout.LayoutMode == "Light")
            {
                <div onclick="localStorage.setItem('LayoutMode', 'Dark')">
                    <img style="height: 2rem; filter: invert(0.95);" src="/images/dark.svg" />
                </div>
            }
            else
            {
                <div onclick="localStorage.setItem('LayoutMode', 'Light')">
                    <img style="height: 2rem; filter: invert(0.95);" src="/images/light.svg" />
                </div>
            }
        </button>
        <HiddenForScreenWidth HideForWidthCondition="w => w > ScreenBreakpoints.Medium">
            <div>
                <LanguageSelect @ref="language" />
            </div>
        </HiddenForScreenWidth>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" style="overflow-y: auto; display: flex; flex-grow: 1; height: 50vh;">
    <nav class="d-flex flex-column flex-grow-1">
        <div class="nav-item px-3" @onclick="CollapseNavMenu">
            <ABP97NavLink Href="#aboutme">
                @Loc["About me"]
            </ABP97NavLink>
        </div>

        <div class="nav-item px-3" @onclick="CollapseNavMenu">
            <ABP97NavLink Href="#projects">
                @Loc["Projects"]
            </ABP97NavLink>
        </div>

        <div class="nav-item px-3" @onclick="CollapseNavMenu">
            <ABP97NavLink Href="#challenges" >
                @Loc["Challenges"]
            </ABP97NavLink>
        </div>

        <div class="nav-item px-3" @onclick="CollapseNavMenu">
            <ABP97NavLink Href="#skills">
                @Loc["Skills"]
            </ABP97NavLink>
        </div>

        <div class="nav-item px-3" @onclick="CollapseNavMenu">
            <ABP97NavLink Href="#learning">
                @Loc["LearningProgress"]
            </ABP97NavLink>
        </div>
            
        <div class="flex-grow-1">

        </div>
        <div class="nav-item px-3">
            <a class="ms-auto nav-link link-info" href="https://github.com/APB97/apb97.github.io" target="_blank">@Loc["Code"]</a>
        </div>
        <div class="nav-item px-0">
            <div class="nav-link">
                <HiddenForScreenWidth HideForWidthCondition="w => w <= ScreenBreakpoints.Medium">
                    <LanguageSelect @ref="language" />
                </HiddenForScreenWidth>
            </div>
        </div>
    </nav>
</div>

@code {
    [CascadingParameter]
    public required MainLayout Layout { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private LanguageSelect? language;

    public string? Culture => language?.Culture;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void CollapseNavMenu()
    {
        collapseNavMenu = true;
        StateHasChanged();
    }

    protected override bool ShouldRender()
    {
        return Loc.IsReady;
    }

    protected override async Task OnInitializedAsync()
    {
        await Loc.InitializeAsync(language?.Culture);
    }

    protected override void OnInitialized()
    {
        Layout.OnStateChanging += GetResources;
    }

    void IDisposable.Dispose()
    {
        Layout.OnStateChanging -= GetResources;
    }

    private async Task GetResources()
    {
        await Loc.InitializeAsync(language?.Culture);
        StateHasChanged();
    }
}
