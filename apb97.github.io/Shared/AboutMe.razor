@using System.Resources
@using apb97.github.io.Pages

@implements IDisposable
@inject IJSRuntime JS
@inject APB97StringLocalizer<AboutMe> localization
@inject NavigationManager Navigation

@if (ShouldRender())
{
    <div class="row">
        <div class="d-flex flex-column">
            <AdjustedAnchorHeading Id="aboutme" Heading="@localization.Localize("About me")">
                <div class="d-flex flex-row">
                    <div class="col-8 flex-column">
                            <div class="d-flex flex-column">
                                <p style="font-size: larger">@localization.Localize("iam_short")</p>
                            </div>

                            <p>
                                @localization.Localize("iam_long")
                            </p>
                
                            <p class="m-0">
                                <b>@localization.Localize("degree_label")</b>
                                @localization.Localize("degree")
                            </p>
                            <p class="m-0">
                                <b>@localization.Localize("status_label")</b>
                                @localization.Localize("status")
                            </p>
                            <HiddenForScreenWidth HideForWidthCondition="width => width < ScreenBreakpoints.Large">
                                <Projects />
                            </HiddenForScreenWidth>
                    </div>
                    <div class="col-4">
                        <img src="/images/AboutMe.jpg" alt="A picture of myself" style="width: 100%; max-width: 368px; max-height: 552px;" />
                    </div>
                </div>
                <HiddenForScreenWidth HideForWidthCondition="width => width >= ScreenBreakpoints.Large">
                    <Projects />
                </HiddenForScreenWidth>
                <Challenges />
                <Skills />
                <LearningProgress />
                <NavigationByIdFix />
            </AdjustedAnchorHeading>
        </div>
    </div>
}

@code {
    protected override bool ShouldRender()
    {
        if (localization.Localization == null) return false;
        return base.ShouldRender();
    }

    protected override async Task OnInitializedAsync()
    {
        await localization.InitializeAsync(LanguageSelect.Culture);
    }

    protected override void OnInitialized()
    {
        MainLayout.OnStateChanging += GetResources;
    }

    void IDisposable.Dispose()
    {
        MainLayout.OnStateChanging -= GetResources;
    }

    private async Task GetResources()
    {
        await localization.InitializeAsync(LanguageSelect.Culture);
        StateHasChanged();
    }
}