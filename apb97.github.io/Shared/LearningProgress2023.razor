@implements IDisposable
@inject StringLocalizer<LearningProgress2023> Loc

<h3>@Loc["Year2023"]</h3>
<ul>
    <li>
        <h4>JavaScript</h4>
        <ul>
            <li>
                <b>@Loc["JS types"]</b>
                <br/>
                <p>@Loc["JS types description"]</p>
                <b>@Loc["Example"]</b>
                <br />
                <CodeView Code="@Loc["JS types code"]"/>
            </li>
            <li>
                <b>@Loc["JS functions and arrays"]</b>
                <br />
                <p>@Loc["JS functions and arrays description"]</p>
                <b>@Loc["Example"]</b>
                <br />
                <CodeView Code="@Loc["JS functions and arrays code"]"/>
            </li>
            <li>
                <b>@Loc["JS objects"]</b>
                <br />
                <p>@Loc["JS objects description"]</p>
                <b>@Loc["Example"]</b>
                <br />
                <CodeView Code="@Loc["JS objects code"]"/>
            </li>
        </ul>
        <h4>@Loc["JavaScript libs"]</h4>
        <ul>
            <li>
                <b>Paged.js</b>
                <br />
                <p>@Loc["Paged.js description"]</p>
            </li>
        </ul>
        <h4>@Loc["General knowledge"]</h4>
        <ul>
            <li>
                <b>@Loc["TPH, TPC, TPT"]</b>
                <br />
                <p>@Loc["TPH, TPC, TPT description"]</p>
            </li>
        </ul>
        <h4>.NET</h4>
        <ul>
            <li>
                <b>@Loc["System.Text.Json"]</b>
                <br />
                <p>@Loc["System.Text.Json description"]</p>
                <a href="https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/custom-contracts" rel="noopener">@Loc["Source"]</a>
            </li>
        </ul>
        <h4>@Loc["NuGet packages"]</h4>
        <ul>
            <li>
                <b>@Loc["HotChocolate"]</b>
                <br />
                <p>@Loc["HotChocolate description"]</p>
            </li>
        </ul>
    </li>
</ul>

@code {
    [CascadingParameter]
    public required MainLayout Layout { get; set; }

    protected override bool ShouldRender()
    {
        return Loc.IsReady;
    }

    protected override async Task OnInitializedAsync()
    {
        await Loc.InitializeAsync(Layout.Culture);
    }

    protected override void OnInitialized()
    {
        Layout.OnStateChanging += GetResources;
    }

    void IDisposable.Dispose()
    {
        Layout.OnStateChanging -= GetResources;
    }

    private async Task GetResources()
    {
        await Loc.InitializeAsync(Layout.Culture);
        StateHasChanged();
    }
}