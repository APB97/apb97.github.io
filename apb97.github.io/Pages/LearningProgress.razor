@page "/LearningProgress/{Year:int=2024}"

@using System.Reflection;
@using apb97.github.io.Shared

@implements IDisposable
@inject APB97StringLocalizer<LearningProgress> localization
@inject NavigationManager Navigation

<PageTitle>Adrian Bieliński - @localization.Localize("LearningProgress") @Year</PageTitle>

<h2>@localization.Localize("LearningProgress")</h2>

<label>@localization.Localize("Year")</label>
<InputNumber TValue="int" Value="Year" ValueChanged="OnYearChanged" ValueExpression="() => Year" min="@MinYear" max="@RecentYear" />

<DynamicComponent Type="GetDynamicComponentType(Year)" />

@code {
    [Parameter]
    public int Year { get; set; } = RecentYear;

    private const int MinYear = 2022;
    private const int RecentYear = 2024;

    private Type GetDynamicComponentType(int year)
    {
        var assembly = Assembly.GetAssembly(typeof(LearningProgress2024));
        var currentYearType = assembly?.GetType($"apb97.github.io.Shared.LearningProgress{year}");
        return currentYearType ?? typeof(LearningProgress2024);
    }

    private void OnYearChanged(int year)
    {
        if (year > RecentYear)
        {
            Navigation.NavigateTo($"/LearningProgress/{RecentYear}");
        }
        else if (year < MinYear)
        {
            Navigation.NavigateTo($"/LearningProgress/{MinYear}");
        }
        else
        {
            Navigation.NavigateTo($"/LearningProgress/{year}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await localization.InitializeAsync(LanguageSelect.Culture);
    }

    protected override void OnInitialized()
    {
        MainLayout.OnStateChanging += GetResources;
    }

    void IDisposable.Dispose()
    {
        MainLayout.OnStateChanging -= GetResources;
    }

    private async Task GetResources()
    {
        await localization.InitializeAsync(LanguageSelect.Culture);
        StateHasChanged();
    }
}