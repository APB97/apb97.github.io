@page "/MetadataRename"
@using apb97.github.io.Shared

@implements IDisposable
@inject StringLocalizer<MetadataRename> Loc

@if (ShouldRender())
{
    <PageTitle>Adrian Bieliński - Metadata Rename</PageTitle>

    <h1>Metadata Rename</h1>

    <p>@Loc["Rename music files using their metadata with this tool."]</p>

    <img class="screenshot-wide" alt="WPF UI" src="https://user-images.githubusercontent.com/16359542/156198027-c851deed-c757-4741-8eff-8d3adfed205d.png"/>

    <p/>

    <h4>@Loc["Description"]</h4>
    <p>
        @Loc["It allows users to specify properties to use for renaming and directories with files they want to rename."]
        @Loc["Apart from that, all invalid path characters are removed to ensure renaming operation will be successful."]
        @Loc["There is default file named skip.txt for words users want to remove from final filenames."]
    </p>

    <p>
        @Loc["This WPF application allows selecting directories, properties used, determining order of properties in the final filename and choosing a SkipFile."]
        @Loc["It allows saving and loading of settings to and from"]
        <code>.json</code>@Loc["file."]
        @Loc["Application displays messages about changes made to the settings and allows to Silence the output, so it is not updated until the setting is changed."]
    </p>

    <a href="https://github.com/APB97/MusicRenameWithMetadata">@Loc["GitHub repository"]</a>
}

@code {
    [CascadingParameter]
    public required MainLayout Layout { get; set; }

    protected override bool ShouldRender()
    {
        return Loc.IsReady;
    }

    protected override async Task OnInitializedAsync()
    {
        await Loc.InitializeAsync(Layout.Culture);
    }

    protected override void OnInitialized()
    {
        Layout.OnStateChanging += GetResources;
    }

    void IDisposable.Dispose()
    {
        Layout.OnStateChanging -= GetResources;
    }

    private async Task GetResources()
    {
        await Loc.InitializeAsync(Layout.Culture);
        StateHasChanged();
    }
}
